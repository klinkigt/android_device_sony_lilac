# PWD: frameworks/native

diff --git a/opengl/libs/EGL/Loader.cpp b/opengl/libs/EGL/Loader.cpp
index d66ef2b96..1b0157253 100644
--- a/opengl/libs/EGL/Loader.cpp
+++ b/opengl/libs/EGL/Loader.cpp
@@ -635,6 +635,20 @@ Loader::driver_t* Loader::attempt_to_load_system_driver(egl_connection_t* cnx, c
     return hnd;
 }
 
+struct MangleMap{
+    std::string unmangled, mangled;
+};
+static const MangleMap mangle_map[8] {
+    {"eglCreateImage", "_Z14eglCreateImagePvS_jS_PKi"},
+    {"eglGetSyncAttrib", "_Z16eglGetSyncAttribPvS_iPi"},
+    {"eglCreatePlatformPixmapSurface", "_Z30eglCreatePlatformPixmapSurfacePvS_P19egl_native_pixmap_tPKl"},
+    {"eglCreatePlatformPixmapSurface", "_Z30eglCreatePlatformPixmapSurfacePvS_P19egl_native_pixmap_tPKi"},
+    {"eglCreatePlatformWindowSurface", "_Z30eglCreatePlatformWindowSurfacePvS_P13ANativeWindowPKl"},
+    {"eglCreatePlatformWindowSurface", "_Z30eglCreatePlatformWindowSurfacePvS_P13ANativeWindowPKi"},
+    {"eglCreatePlatformPixmapSurfaceEXT", "_Z33eglCreatePlatformPixmapSurfaceEXTPvS_P19egl_native_pixmap_tPKi"},
+    {"eglCreatePlatformWindowSurfaceEXT", "_Z33eglCreatePlatformWindowSurfaceEXTPvS_P13ANativeWindowPKi"},
+};
+
 void Loader::initialize_api(void* dso, egl_connection_t* cnx, uint32_t mask) {
     if (mask & EGL) {
         getProcAddress = (getProcAddressType)dlsym(dso, "eglGetProcAddress");
@@ -653,6 +667,15 @@ void Loader::initialize_api(void* dso, egl_connection_t* cnx, uint32_t mask) {
             if (f == nullptr) {
                 // couldn't find the entry-point, use eglGetProcAddress()
                 f = getProcAddress(name);
+                if (f == nullptr) {
+                    for(const MangleMap& map: mangle_map) {
+                        if (name == map.unmangled) {
+                            f = (__eglMustCastToProperFunctionPointerType)dlsym(dso, map.mangled.c_str());
+                            if (f != nullptr)
+                                break;
+                        }
+                    }
+                }
                 if (f == nullptr) {
                     f = (__eglMustCastToProperFunctionPointerType)nullptr;
                 }
